{
    "openapi": "3.0.1",
    "info": {
        "title": "Insurance Change My Payment Api v1",
        "description": "Insurance Change My Payment Api",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://az-api-sit.ractest.com.au/insurance/change-my-payment/api/v1"
        }
    ],
    "paths": {
        "/policy": {
            "get": {
                "summary": "GetPolicyDetails",
                "description": "Get the details of the policy you're changing.",
                "operationId": "getpolicydetails",
                "parameters": [
                    {
                        "name": "policyNumber",
                        "in": "query",
                        "description": "The policy number of the policy",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The policy details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyDetailsResponse"
                                },
                                "example": {
                                    "policy": {
                                        "policyNumber": "HGP123456789",
                                        "policyType": "HGP",
                                        "policyTitle": "Home insurance",
                                        "policySubtitle": "Building & contents",
                                        "isPaidInFull": false,
                                        "policyProperties": [
                                            {
                                                "key": "Address",
                                                "value": "832 Wellington Street"
                                            },
                                            {
                                                "key": "Policy number",
                                                "value": "HGP123456789"
                                            }
                                        ]
                                    },
                                    "nextInstalment": {
                                        "amount": 161.96,
                                        "dueDate": "2022-10-07T00:00:00.0000000+08:00",
                                        "minimumCollectionDate": "2022-10-13T00:00:00.0000000+08:00",
                                        "maximumCollectionDate": "2022-11-07T00:00:00.0000000+08:00"
                                    },
                                    "email": "7901383@racnpe.local"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "408": {
                        "description": "Session expired"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "summary": "UpdatePolicyDetails",
                "description": "Update the details of the policy.",
                "operationId": "updatepolicydetails",
                "requestBody": {
                    "description": "Request to update policy details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePolicyDetailsRequest"
                            },
                            "example": {
                                "policyNumber": "MGP3705235",
                                "email": "test@rac.com.au"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Policy update was successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatePolicyResult"
                                },
                                "example": {
                                    "policyNumber": "MGP1234567",
                                    "confirmationMessage": "You'll be paying your car insurance on 01/01/2023 from a credit card."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/session/reset-expiry": {
            "post": {
                "summary": "ResetSessionExpiry",
                "description": "Reset session expiry using the SessionId header and return session expiry in seconds.",
                "operationId": "resetsessionexpiry",
                "responses": {
                    "200": {
                        "description": "Session expiry in seconds retrieved successfully",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Number"
                                },
                                "example": 999
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "Session expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health/status": {
            "get": {
                "summary": "GetHealthStatus",
                "description": "Health status endpoint to determine if API is up and running.",
                "operationId": "gethealthstatus",
                "responses": {
                    "200": {
                        "description": "Health Status Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthStatusResponse"
                                },
                                "example": [
                                    {
                                        "system": "string",
                                        "isAlive": true
                                    }
                                ]
                            }
                        }
                    },
                    "204": {
                        "description": "No Content Success"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        },
        "/session": {
            "post": {
                "summary": "CreateSession",
                "description": "Create a new session.",
                "operationId": "createsession",
                "responses": {
                    "200": {
                        "description": "Session creation was successful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/String"
                                },
                                "example": 12341234
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/endorsement": {
            "post": {
                "summary": "EndorsePolicy",
                "description": "Update the payment details of the policy and endorse.",
                "operationId": "endorsepolicy",
                "requestBody": {
                    "description": "Request to update payment details of a policy.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndorsePolicyRequest"
                            },
                            "example": "{\r\n \"policyNumber\": \"MGP3705235\",\r\n \"accountExternalNumber\": \"1234567890\"\r\n  \"paymentType\": \"NewCreditCard\"\r\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Policy update was successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatePolicyResult"
                                },
                                "example": {
                                    "policyNumber": "MGP1234567",
                                    "confirmationMessage": "You'll be paying your car insurance on 01/01/2023 from a credit card."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/reference-data": {
            "get": {
                "summary": "GetPaymentReferenceData",
                "description": "Get payment reference data.",
                "operationId": "getpaymentreferencedata",
                "responses": {
                    "200": {
                        "description": "The related reference data required for for Westpac QuickStream-API.js",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentReferenceDataResult"
                                },
                                "example": {
                                    "westpacPublishableApiKey": "xxxxx-xxxxx-xxxxx"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/session/expiry": {
            "get": {
                "summary": "GetSessionExpiry",
                "description": "Get session expiry in seconds using the SessionId header.",
                "operationId": "getsessionexpiry",
                "responses": {
                    "200": {
                        "description": "Session expiry in seconds retrieved successfully",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Number"
                                },
                                "example": 999
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "408": {
                        "description": "Session expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/credit-card": {
            "post": {
                "summary": "AddCreditCard",
                "description": "Add credit card to member's shield contact.",
                "operationId": "addcreditcard",
                "requestBody": {
                    "description": "Request to add credit card to member's shield contact.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddCreditCardRequest"
                            },
                            "example": {
                                "policyNumber": "MGP123456789",
                                "token": "1234567890"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shield External Number for the new credit card record.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddCreditCardResponse"
                                },
                                "example": {
                                    "externalNumber": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "408": {
                        "description": "Session expired"
                    },
                    "422": {
                        "description": "Request entity was unprocessable. Requests may be retried again (with presence of Retry-After header).",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait before making a follow-up request. The absence of this header indicates it cannot be retried and should be treated the same as a 500 (Internal Server Error).",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "summary": "GetPaymentAccounts",
                "description": "Get the member's payment accounts.",
                "operationId": "getpaymentaccounts",
                "parameters": [
                    {
                        "name": "policyNumber",
                        "in": "query",
                        "description": "Policy number of the policy to also be informed which account is paying for it.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The payment accounts.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentAccountsResponse"
                                },
                                "example": {
                                    "policyPaymentAccountExternalNumber": "string",
                                    "bankAccounts": [
                                        {
                                            "externalNumber": "string",
                                            "bsb": "string",
                                            "accountNumberSuffix": "string",
                                            "accountName": "string"
                                        }
                                    ],
                                    "creditCards": [
                                        {
                                            "externalNumber": "string",
                                            "cardholderName": "string",
                                            "cardExpiryDate": "string",
                                            "cardNumberSuffix": "string",
                                            "cardType": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "408": {
                        "description": "Session expired"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "String": {
                "title": "String",
                "type": "string",
                "description": "String"
            },
            "Number": {
                "title": "Number",
                "type": "number",
                "description": "Number"
            },
            "Error": {
                "title": "Error",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string",
                        "description": "The error message."
                    }
                },
                "description": "Contains the details regarding the error."
            },
            "PolicyDetailsResponse": {
                "title": "PolicyDetailsResponse",
                "required": [
                    "policy"
                ],
                "type": "object",
                "properties": {
                    "policy": {
                        "$ref": "#/components/schemas/PolicyDetails"
                    },
                    "nextInstalment": {
                        "$ref": "#/components/schemas/Instalment"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "description": "The member's email address."
                    },
                    "webChatConfig": {
                        "$ref": "#/components/schemas/WebChatConfig"
                    }
                },
                "description": "Response with details of the policy."
            },
            "WebChatConfig": {
                "title": "WebChatConfig",
                "required": [
                    "skillId",
                    "skillPointOfContactId",
                    "businessNumber",
                    "crmId"
                ],
                "type": "object",
                "properties": {
                    "skillId": {
                        "title": "SkillId",
                        "type": "string"
                    },
                    "skillPointOfContactId": {
                        "title": "SkillPointOfContactId",
                        "type": "string"
                    },
                    "businessNumber": {
                        "title": "BusinessNumber",
                        "type": "string"
                    },
                    "crmId": {
                        "title": "CrmId",
                        "type": "string"
                    }
                }
            },
            "PaymentAccountsResponse": {
                "title": "PaymentAccountsResponse",
                "required": [
                    "bankAccounts",
                    "creditCards"
                ],
                "type": "object",
                "properties": {
                    "policyPaymentAccountExternalNumber": {
                        "title": "PolicyPaymentAccountExternalNumber",
                        "type": "string",
                        "description": "The external number of the provided policy's payment account."
                    },
                    "bankAccounts": {
                        "title": "BankAccounts",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ObfuscatedBankAccount"
                        },
                        "description": "The list of bank accounts for the member."
                    },
                    "creditCards": {
                        "title": "CreditCards",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ObfuscatedCreditCard"
                        },
                        "description": "The list of credit cards for the member."
                    }
                },
                "description": "Response with the member's payment accounts."
            },
            "AddCreditCardRequest": {
                "title": "AddCreditCardRequest",
                "required": [
                    "policyNumber",
                    "token"
                ],
                "type": "object",
                "properties": {
                    "policyNumber": {
                        "title": "PolicyNumber",
                        "type": "string",
                        "description": "The policy number of the policy."
                    },
                    "token": {
                        "title": "Token",
                        "type": "string",
                        "description": "The Westpac single use token id."
                    }
                },
                "description": "Request to register a new credit card with westpac and add to the member's shield contact"
            },
            "AddCreditCardResponse": {
                "title": "AddCreditCardResponse",
                "required": [
                    "externalNumber"
                ],
                "type": "object",
                "properties": {
                    "externalNumber": {
                        "title": "ExternalNumber",
                        "type": "string",
                        "description": "The external number for the new credit added to the member's shield contact."
                    }
                },
                "description": "Response with the external number for the new credit added to the member's shield contact."
            },
            "BankAccount": {
                "title": "BankAccount",
                "required": [
                    "bsb",
                    "accountNumber",
                    "accountName"
                ],
                "type": "object",
                "properties": {
                    "bsb": {
                        "title": "BSB",
                        "type": "string",
                        "description": "The account's BSB."
                    },
                    "accountNumber": {
                        "title": "AccountNumber",
                        "type": "string",
                        "description": "The account's number."
                    },
                    "accountName": {
                        "title": "AccountName",
                        "type": "string",
                        "description": "The account's name."
                    }
                },
                "description": "A bank account."
            },
            "ObfuscatedBankAccount": {
                "title": "ObfuscatedBankAccount",
                "required": [
                    "externalNumber",
                    "bsb",
                    "accountNumber",
                    "accountName"
                ],
                "type": "object",
                "properties": {
                    "externalNumber": {
                        "title": "ExternalNumber",
                        "type": "string",
                        "description": "The account's external number."
                    },
                    "bsb": {
                        "title": "BSB",
                        "type": "string",
                        "description": "The account's BSB."
                    },
                    "accountNumberSuffix": {
                        "title": "AccountNumberSuffix",
                        "type": "string",
                        "description": "The end of the account's number."
                    },
                    "accountName": {
                        "title": "AccountName",
                        "type": "string",
                        "description": "The account's name."
                    }
                },
                "description": "An obfuscated bank account."
            },
            "ObfuscatedCreditCard": {
                "title": "ObfuscatedCreditCard",
                "required": [
                    "externalNumber"
                ],
                "type": "object",
                "properties": {
                    "externalNumber": {
                        "title": "ExternalNumber",
                        "type": "string",
                        "description": "The account's external number."
                    },
                    "cardholderName": {
                        "title": "CardholderName",
                        "type": "string",
                        "description": "The cardholder's name."
                    },
                    "cardExpiryDate": {
                        "title": "CardExpiryDate",
                        "type": "string",
                        "description": "The card's expiry date."
                    },
                    "cardNumberSuffix": {
                        "title": "CardNumberSuffix",
                        "type": "string",
                        "description": "The end of the card's number."
                    },
                    "cardType": {
                        "title": "CardType",
                        "type": "string",
                        "description": "The card's type."
                    }
                },
                "description": "An obfuscated credit card."
            },
            "PolicyDetails": {
                "title": "PolicyDetails",
                "required": [
                    "policyNumber",
                    "policyType",
                    "policyTitle",
                    "policyProperties",
                    "isPaidInFull",
                    "policyEndDate",
                    "paymentFrequency"
                ],
                "type": "object",
                "properties": {
                    "policyNumber": {
                        "title": "PolicyNumber",
                        "type": "string",
                        "description": "The policy number of the policy."
                    },
                    "policyType": {
                        "title": "PolicyType",
                        "type": "string",
                        "description": "The product type of policy."
                    },
                    "policyTitle": {
                        "title": "PolicyTitle",
                        "type": "string",
                        "description": "A description of the policy."
                    },
                    "policySubtitle": {
                        "title": "PolicySubtitle",
                        "type": "string",
                        "description": "A secondary description of the policy."
                    },
                    "policyProperties": {
                        "title": "PolicyProperties",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PolicyProperty"
                        },
                        "description": "An array of extra information about the policy."
                    },
                    "analytics": {
                        "title": "Analytics",
                        "type": "string",
                        "description": "An analytics string specific to the policy."
                    },
                    "isPaidInFull": {
                        "title": "IsPaidInFull",
                        "type": "boolean",
                        "description": "Whether the policy premium has been paid in full."
                    },
                    "policyEndDate": {
                        "title": "PolicyEndDate",
                        "type": "string",
                        "description": "The end date and time of the policy.",
                        "format": "string"
                    },
                    "paymentFrequency": {
                        "title": "PaymentFrequency",
                        "type": "string",
                        "description": "A payment frequency of the policy."
                    }
                },
                "description": "The policy details."
            },
            "PolicyProperty": {
                "title": "PolicyProperty",
                "required": [
                    "key",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "title": "Key",
                        "type": "string",
                        "description": "The key of the policy detail property."
                    },
                    "value": {
                        "title": "Value",
                        "type": "string",
                        "description": "The value of the policy detail property."
                    }
                },
                "description": "A key-value pair of a property of the policy."
            },
            "Instalment": {
                "title": "Instalment",
                "type": "object",
                "properties": {
                    "amount": {
                        "title": "amount",
                        "type": "number",
                        "description": "The instalment amount."
                    },
                    "dueDate": {
                        "title": "DueDate",
                        "type": "string",
                        "description": "The due date of the instalment.",
                        "format": "string"
                    },
                    "minimumCollectionDate": {
                        "title": "MinimumCollectionDate",
                        "type": "string",
                        "description": "The minimum collection date date of the instalment.",
                        "format": "string"
                    },
                    "maximumCollectionDate": {
                        "title": "MaximumCollectionDate",
                        "type": "string",
                        "description": "The maximum collection date date of the instalment.",
                        "format": "string"
                    }
                },
                "description": "A policy instalment."
            },
            "UpdatePolicyDetailsRequest": {
                "title": "UpdatePolicyDetailsRequest",
                "required": [
                    "policyNumber",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "policyNumber": {
                        "title": "PolicyNumber",
                        "type": "string",
                        "description": "The policy number of the policy."
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "description": "The member's email."
                    },
                    "newCollectionDate": {
                        "title": "NewCollectionDate",
                        "type": "string",
                        "description": "The new collection date of the installment.",
                        "format": "string"
                    },
                    "existingAccountExternalNumber": {
                        "title": "ExistingAccountExternalNumber",
                        "type": "string",
                        "description": "The external number of an existing account"
                    },
                    "newAccount": {
                        "$ref": "#/components/schemas/BankAccount"
                    },
                    "newCreditCardExternalNumber": {
                        "title": "NewCreditCardExternalNumber",
                        "type": "string",
                        "description": "The external number of the new credit card that has been registered."
                    }
                },
                "description": "Request to update a policy"
            },
            "EndorsePolicyRequest": {
                "title": "EndorsePolicyRequest",
                "required": [
                    "policyNumber",
                    "accountExternalNumber",
                    "paymentType"
                ],
                "type": "object",
                "properties": {
                    "policyNumber": {
                        "title": "PolicyNumber",
                        "type": "string",
                        "description": "The policy number of the policy."
                    },
                    "accountExternalNumber": {
                        "title": "AccountExternalNumber",
                        "type": "string",
                        "description": "external bank or credit card number"
                    },
                    "newCollectionDate": {
                        "title": "NewCollectionDate",
                        "type": "string",
                        "description": "The new collection date of the installment.",
                        "format": "string"
                    },
                    "paymentType": {
                        "title": "PaymentType",
                        "enum": [
                            "NewCreditCard",
                            "NewBankAccount",
                            "ExistingAccount"
                        ],
                        "type": "string",
                        "description": "The external number of an existing account"
                    }
                },
                "description": "Request to update  policy payment details"
            },
            "UpdatePolicyResult": {
                "title": "UpdatePolicyResult",
                "required": [
                    "policyNumber",
                    "confirmationMessage"
                ],
                "type": "object",
                "properties": {
                    "policyNumber": {
                        "title": "PolicyNumber",
                        "type": "string",
                        "description": "The policy number of the policy."
                    },
                    "confirmationMessage": {
                        "title": "ConfirmationMessage",
                        "type": "string",
                        "description": "Message to be displayed that confirms that the policy details have been updated."
                    }
                },
                "description": "The result from updating a policy."
            },
            "PaymentReferenceDataResult": {
                "title": "PaymentReferenceDataResult",
                "required": [
                    "westpacPublishableApiKey"
                ],
                "type": "object",
                "properties": {
                    "westpacPublishableApiKey": {
                        "title": "WestpacPublishableApiKey",
                        "type": "string",
                        "description": "Publishable Westpac API Key."
                    }
                },
                "description": "Payment Reference Data for Westpac QuickStream-API.js"
            },
            "HealthStatusResponse": {
                "title": "HealthStatusResponse",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/SystemStatus"
                },
                "description": "The response of the health status."
            },
            "SystemStatus": {
                "title": "SystemStatus",
                "type": "object",
                "properties": {
                    "system": {
                        "title": "System",
                        "type": "string",
                        "description": "The system."
                    },
                    "isAlive": {
                        "title": "IsAlive",
                        "type": "boolean",
                        "description": "Denotes if the system is alive."
                    }
                },
                "description": "System with current health status"
            }
        }
    }
}