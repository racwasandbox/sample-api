{
    "openapi": "3.0.1",
    "info": {
        "title": "Insurance Caravan API v1",
        "description": "Insurance Caravan API",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://az-api-sit.ractest.com.au/insurance/caravan/api/v1"
        }
    ],
    "paths": {
        "/health/status": {
            "get": {
                "summary": "GetHealthStatus",
                "description": "Get health status",
                "operationId": "gethealthstatus",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/session/expiry": {
            "get": {
                "summary": "GetSessionExpiry",
                "description": "Get session expiry in seconds using the SessionId header.",
                "operationId": "getsessionexpiry",
                "responses": {
                    "200": {
                        "description": "Session expiry in seconds retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/String"
                                },
                                "example": 999
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "{\r\n  \"message\": \"The SessionId is null or empty.r\n}"
                            }
                        }
                    },
                    "408": {
                        "description": "Session expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "{\r\n  \"message\": \"The Session has expired.r\n}"
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/session": {
            "post": {
                "summary": "CreateSession",
                "description": "Create a new session with the supplied SessionId header.",
                "operationId": "createsession",
                "responses": {
                    "200": {
                        "description": "Session creation was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/String"
                                },
                                "example": 1234123123
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "{\r\n  \"message\": \"The SessionId is null or empty.r\n}"
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/caravans/manufacturers/{manufacturerCode}/years/{year}/models": {
            "get": {
                "summary": "GetModels",
                "description": "Retrieves a list of available insurable models for the specified caravan or trailer manufacturer and year.",
                "operationId": "getmodels",
                "parameters": [
                    {
                        "name": "manufacturerCode",
                        "in": "path",
                        "description": "The manufacturer code.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year of the model.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available insurable models for the specified caravan or trailer manufacturer and year.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetModelsResponse"
                                },
                                "example": "[[{\r\n    \"code\": \"ALL TERRAIN\",\r\n    \"name\": \"ALL TERRAIN\"\r\n  }, {\r\n    \"code\": \"EXPANDA\",\r\n    \"name\": \"EXPANDA\"\r\n  }, {\r\n    \"code\": \"EXPANDA OUTBACK\",\r\n    \"name\": \"EXPANDA OUTBACK\"\r\n  }, {\r\n    \"code\": \"J-POD SPORT\",\r\n    \"name\": \"J-POD SPORT\"\r\n  }, {\r\n    \"code\": \"LARK\",\r\n    \"name\": \"LARK\"\r\n  }, {\r\n    \"code\": \"PENGUIN\",\r\n    \"name\": \"PENGUIN\"\r\n  }, {\r\n    \"code\": \"WORK N PLAY\",\r\n    \"name\": \"WORK N PLAY\"\r\n  }, {\r\n    \"code\": \"WORK N PLAY OUTBACK\",\r\n    \"name\": \"WORK N PLAY OUTBACK\"\r\n  }\r\n]"
                            }
                        }
                    },
                    "404": {
                        "description": "No available insurable models have been found for the specified caravan or trailer manufacturer and year."
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/caravans/manufacturers/{manufacturerCode}/years": {
            "get": {
                "summary": "GetMnfctrsYrs",
                "description": "Retrieves a list of available model years for the specified caravan or trailer manufacturer.",
                "operationId": "getmnfctrsyrs",
                "parameters": [
                    {
                        "name": "manufacturerCode",
                        "in": "path",
                        "description": "The manufacturer code.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available model years for the specified caravan or trailer manufacturer.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetManufacturerYearsResponse"
                                },
                                "example": "[[\r\n  2024,\r\n  2023,\r\n  2022,\r\n  2021,\r\n  2020,\r\n  2019,\r\n  2000,\r\n  1991\r\n]"
                            }
                        }
                    },
                    "404": {
                        "description": "No available model years have been found for the specified caravan or trailer manufacturer."
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/caravans/manufacturers/{manufacturerCode}/years/{year}/caravans": {
            "get": {
                "summary": "GetCaravans",
                "description": "Retrieves a list of available insurable caravans for the specified caravan or trailer manufacturer, year and model.",
                "operationId": "getcaravans",
                "parameters": [
                    {
                        "name": "manufacturerCode",
                        "in": "path",
                        "description": "The manufacturer code.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year of the model.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "The model code.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available insurable caravans for the specified caravan or trailer manufacturer, year and model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCaravansResponse"
                                },
                                "example": "[[{\r\n    \"id\": 70004308,\r\n    \"manufacturerCode\": \"JAY\",\r\n    \"manufacturer\": \"JAYCO\",\r\n    \"year\": 2021,\r\n    \"modelCode\": \"EXPANDA\",\r\n    \"model\": \"EXPANDA\",\r\n    \"description\": \"EXPANDA 17ft 17.56-1 - POP-TOP\",\r\n    \"marketValue\": 46990.0\r\n  }, {\r\n    \"id\": 70004309,\r\n    \"manufacturerCode\": \"JAY\",\r\n    \"manufacturer\": \"JAYCO\",\r\n    \"year\": 2021,\r\n    \"modelCode\": \"EXPANDA\",\r\n    \"model\": \"EXPANDA\",\r\n    \"description\": \"EXPANDA 17ft 17.56-2 - POP-TOP\",\r\n    \"marketValue\": 50690.0\r\n  }\r\n]"
                            }
                        }
                    },
                    "404": {
                        "description": "No available insurable caravans have been found for the specified caravan or trailer manufacturer and year."
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/caravans/manufacturers": {
            "get": {
                "summary": "GetManufacturers",
                "description": "Retrieves a list of insurable caravan or trailer manufacturers.",
                "operationId": "getmanufacturers",
                "responses": {
                    "200": {
                        "description": "List of insurable caravan or trailer manufacturers.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetManufacturersResponse"
                                },
                                "example": "[[{\r\n    \"code\": \"JAY\",\r\n    \"name\": \"JAYCO\",\r\n    \"isPopular\": true\r\n  }, {\r\n    \"code\": \"COR\",\r\n    \"name\": \"COROMAL\",\r\n    \"isPopular\": true\r\n  }, {\r\n    \"code\": \"ABL\",\r\n    \"name\": \"Able Trailers\"\r\n  }, {\r\n    \"code\": \"DAR\",\r\n    \"name\": \"DARIO\"\r\n  }, {\r\n    \"code\": \"DAS\",\r\n    \"name\": \"DAVSHER\"\r\n  }, {\r\n    \"code\": \"GOD\",\r\n    \"name\": \"GOLDEN EAGLE\"\r\n  }, {\r\n    \"code\": \"RIP\",\r\n    \"name\": \"RIPTIDE\"\r\n  }, {\r\n    \"code\": \"TER\",\r\n    \"name\": \"TERRAFIRMA CAMPER TRAILERS\"\r\n  }, {\r\n    \"code\": \"ZRV\",\r\n    \"name\": \"ZONE RV\"\r\n  }\r\n]"
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/referencedata/suburbs": {
            "get": {
                "summary": "GetSuburbs",
                "description": "Gets WA Suburbs",
                "operationId": "getsuburbs",
                "responses": {
                    "200": {
                        "description": "The WA Suburbs.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Suburbs"
                                },
                                "example": [
                                    [
                                        {
                                            "cityName": "Applecross - 6153",
                                            "postcode": "6153"
                                        },
                                        {
                                            "cityName": "Appendene - 6210",
                                            "postcode": "6210"
                                        }
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/contacts/match": {
            "delete": {
                "summary": "DeleteMatchedContactFromSession",
                "description": "Delete the matched contact details from the session using the SessionId header.",
                "operationId": "deletematchedcontactfromsession",
                "responses": {
                    "204": {
                        "description": "Matched contact details successfully deleted from session"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "{\r\n  \"message\": \"The SessionId is null or empty.r\n}"
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "MatchContact",
                "description": "Perform a match against a contact based on the supplied filters.",
                "operationId": "matchcontact",
                "requestBody": {
                    "description": "The details used to match against a contact.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchContact"
                            },
                            "example": {
                                "firstName": "Alex",
                                "dateOfBirth": "1981-06-15",
                                "mobileNumber": "0410262495",
                                "email": "test_private@rac.com.au"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Match was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchedContactDetails"
                                },
                                "example": {
                                    "membershipTier": "Gold",
                                    "status": "200"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "MobileNumber is in an incorrect format."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Match not found."
                    },
                    "409": {
                        "description": "Ambiguous matches."
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/referencedata/overnightparking": {
            "get": {
                "summary": "GetOvernightParkingOptions",
                "description": "Gets overnight parking options",
                "operationId": "getovernightparkingoptions",
                "responses": {
                    "200": {
                        "description": "The list of overnight parking options.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OvernightParkingOptions"
                                },
                                "example": [
                                    [
                                        {
                                            "description": "On-site",
                                            "externalCode": "1"
                                        },
                                        {
                                            "description": "Garage",
                                            "externalCode": "2"
                                        }
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/areyouamember/contact-match/attempts": {
            "get": {
                "summary": "ContactMatchAttemptsExhausted",
                "description": "Checks wheter a device has exhausted the number of attempts to contact match.",
                "operationId": "contactmatchattemptsexhausted",
                "responses": {
                    "200": {
                        "description": "The device still allowed to try again a contact match."
                    },
                    "429": {
                        "description": "Too many requests."
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/referencedata/financiers": {
            "get": {
                "summary": "GetFinanciers",
                "description": "Gets financiers",
                "operationId": "getfinanciers",
                "responses": {
                    "200": {
                        "description": "The list of financiers.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Financiers"
                                },
                                "example": [
                                    [
                                        {
                                            "externalFinancierNumber": "111",
                                            "financierName": "BankWest"
                                        },
                                        {
                                            "externalFinancierNumber": "222",
                                            "fiancierName": "WestPac"
                                        }
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/referencedata/membership-levels": {
            "get": {
                "summary": "GetMembershipLevels",
                "description": "Gets membership levels",
                "operationId": "getmembershiplevels",
                "responses": {
                    "200": {
                        "description": "The list of membership level options.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MembershipLevels"
                                },
                                "example": [
                                    [
                                        {
                                            "description": "Gold member",
                                            "externalCode": "U"
                                        },
                                        {
                                            "description": "Silver member",
                                            "externalCode": "V"
                                        }
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/quote": {
            "post": {
                "summary": "SaveQuote",
                "description": "Saves caravan or trailer quote.",
                "operationId": "savequote",
                "requestBody": {
                    "description": "The details of the quote to be saved.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuoteRequest"
                            },
                            "example": {
                                "promotion": "50OFF",
                                "asset": {
                                    "vehicleId": 5331034,
                                    "keptLocation": "Garage",
                                    "suburb": "PERTH",
                                    "postcode": "6000"
                                },
                                "policyholders": [
                                    {
                                        "dateOfBirth": "2000-01-01",
                                        "membershipTier": "Silver"
                                    },
                                    {
                                        "dateOfBirth": "1999-01-01"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The saved quote details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuoteResponse"
                                },
                                "example": {
                                    "quoteNumber": "QTE00124512",
                                    "startDate": {
                                        "value": "2022-01-02",
                                        "min": "2022-01-01",
                                        "max": "2022-01-29"
                                    },
                                    "covers": [
                                        {
                                            "type": "Caravan",
                                            "sumInsured": {
                                                "value": 51845,
                                                "min": 30000,
                                                "max": 80000
                                            },
                                            "contents": {
                                                "value": 1000,
                                                "options": [
                                                    1000,
                                                    1100,
                                                    1200,
                                                    1300,
                                                    1400,
                                                    1500
                                                ]
                                            },
                                            "excess": {
                                                "value": 50,
                                                "options": [
                                                    0,
                                                    50
                                                ]
                                            },
                                            "premiumDetails": {
                                                "annual": {
                                                    "total": 1012.12,
                                                    "gst": 101,
                                                    "basic": 1000,
                                                    "governmentCharges": 11.12
                                                },
                                                "monthly": {
                                                    "total": 1112.12,
                                                    "instalment": 84.35,
                                                    "gst": 8.44,
                                                    "basic": 70,
                                                    "governmentCharges": 4.55
                                                }
                                            },
                                            "discounts": [
                                                {
                                                    "discountType": "OnlineDiscount",
                                                    "discountValue": 50,
                                                    "description": "$50 First year online discount*"
                                                },
                                                {
                                                    "discountType": "MemberDiscount",
                                                    "discountPercent": 10,
                                                    "description": "10% Gold member discount"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "Quote irregularities or data validation failed."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/furtherdetails": {
            "put": {
                "summary": "FurtherDetails",
                "description": "Update the policy with further detail.",
                "operationId": "furtherdetails",
                "requestBody": {
                    "description": "The policy details to update.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FurtherDetailsRequest"
                            },
                            "example": {
                                "startDate": "2021-12-31"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The cover details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverSummary"
                                },
                                "example": "{\r\n      \"type\": \"Caravan\",\r\n      \"premiumDetails\": {\r\n        \"annual\": {\r\n          \"total\": 1012.12,\r\n          \"gst\": 101,\r\n          \"basic\": 1000,\r\n          \"governmentCharges\": 11.12\r\n        },\r\n        \"monthly\": {\r\n          \"total\": 1112.12,\r\n          \"instalment\": 84.35,\r\n          \"gst\": 8.44,\r\n          \"basic\": 70,\r\n          \"governmentCharges\": 4.55\r\n        }\r\n      }"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "Policy start date is required."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/session/next": {
            "get": {
                "summary": "GetNext",
                "description": "Get next to extend user session using security by obscurity",
                "operationId": "getnext",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/quote/email": {
            "post": {
                "summary": "EmailQuote",
                "description": "Save and email caravan or trailer quote.",
                "operationId": "emailquote",
                "requestBody": {
                    "description": "The details of the quote to be saved and emailed.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailQuoteRequest"
                            },
                            "example": "{\r\n  \"frequency\": \"Monthly\",\r\n  \"excess\": 0,\r\n  \"sumInsured\" 42736,\r\n  \"contents\": 4000\r\n}"
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "Quote irregularities or data validation failed."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/personalinformation/reference-data": {
            "get": {
                "summary": "GetPersonalInformationReferenceData",
                "description": "Gets reference data for Personal Information page.",
                "operationId": "getpersonalinformationreferencedata",
                "responses": {
                    "200": {
                        "description": "The Personal Information Reference Data that includes mailing address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalInformationReferenceData"
                                },
                                "example": {
                                    "moniker": "AUS|1ccdcb3c-3546-4771-81d9-280ebbbc3e99|7.730OOAUSHAjkBwAAAAAIAgEAAAABh6QikAAgAAAAAAAAAAD..2QAAAAA.....wAAAAAAAAAAAAAAAAAAADgzMiBXZWxsaW5ndG9uLAAAAAAA$15",
                                    "displayAddress": "832 Wellington Street, WEST PERTH  WA"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/addresses": {
            "get": {
                "summary": "GetAddresses",
                "description": "Get addresses",
                "operationId": "getaddresses",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The search term to apply onto the address to filter on.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The addresses matching the filter.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressSummaryList"
                                },
                                "example": [
                                    [
                                        {
                                            "moniker": "AUS|1ccdcb3c-3546-4771-81d9-280ebbbc3e99|7.730OOAUSHAjkBwAAAAAIAgEAAAABh6QikAAgAAAAAAAAAAD..2QAAAAA.....wAAAAAAAAAAAAAAAAAAADgzMiBXZWxsaW5ndG9uLAAAAAAA$15",
                                            "displayAddress": "832 Wellington Street, WEST PERTH  WA"
                                        },
                                        {
                                            "moniker": "AUS|1ccdcb3c-3546-4771-81d9-280ebbbc3e99|7.730ZOAUSHAjkBwAAAAAIAgEAAAABh6QlUBAhAIIAAAAAAAAAAAD..2QAAAAA.....wAAAAAAAAAAAAAAAAAAADgzMiBXZWxsaW5ndG9uLAAAAAAA$15",
                                            "displayAddress": "Ground Floor  832 Wellington Street, WEST PERTH  WA"
                                        }
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/quote/cover": {
            "put": {
                "summary": "UpdateQuoteCover",
                "description": "Updates a caravan quote cover.",
                "operationId": "updatequotecover",
                "requestBody": {
                    "description": "The details of the quote cover to be updated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CoverRequest"
                            },
                            "example": "\r\n    \"coverType\": \"COMP\",\r\n    \"excess\": 300,\r\n    \"sumInsured\": 13000,\r\n    \"frequency\":  \"Annual\",\r\n    \"contents\": 1500\r\n}"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated quote details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cover"
                                },
                                "example": {
                                    "code": "OMCO",
                                    "excess": 10000,
                                    "sumInsured": {
                                        "value": 12000,
                                        "min": 7000,
                                        "max": 13000
                                    },
                                    "availableExcesses": [
                                        0,
                                        500,
                                        1000,
                                        1500,
                                        2000
                                    ],
                                    "premiumDetails": {
                                        "annual": {
                                            "total": 1012.12,
                                            "gst": 101,
                                            "basic": 1000,
                                            "governmentCharges": 11.12
                                        },
                                        "monthly": {
                                            "total": 1112.12,
                                            "installment": 84.35,
                                            "gst": 8.44,
                                            "basic": 70,
                                            "governmentCharges": 4.55
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "Quote irregularities or data validation failed."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/personalinformation": {
            "post": {
                "summary": "UpdateContactDetails",
                "description": "Update the contacts details.",
                "operationId": "updatecontactdetails",
                "requestBody": {
                    "description": "The contact details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContactDetailsRequest"
                            },
                            "example": "{\r\n  \"contacts\": [{\r\n  \"mailingAddress\": \"AUS|ca9b5e15-16ad-4735-8d5e-c4841c75466b|7.730mOAUSHAnkBwAAAAAIAgEAAAABiBCpUAAgAAAAAAAAAAD..2QAAAAA.....wAAAAAAAAAAAAAAAAAAADgzMiBXZWxsaW5ndG9uIFN0cgAAAAAA$18\"\r\n  }"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The cover details of the updated quote.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateContactDetailsResponse"
                                },
                                "example": "{\r\n      \"type\": \"Caravan\",\r\n      \"premiumDetails\": {\r\n        \"annual\": {\r\n          \"total\": 1012.12,\r\n          \"gst\": 101,\r\n          \"basic\": 1000,\r\n          \"governmentCharges\": 11.12\r\n        },\r\n        \"monthly\": {\r\n          \"total\": 1112.12,\r\n          \"instalment\": 84.35,\r\n          \"gst\": 8.44,\r\n          \"basic\": 70,\r\n          \"governmentCharges\": 4.55\r\n        },\r\n      \"discounts\": [\r\n        {\r\n          \"discountType\": \"OnlineDiscount\",\r\n          \"discountValue\": 50,\r\n          \"description\": \"$50 First year online discount*\"\r\n        },\r\n        {\r\n          \"discountType\": \"MemberDiscount\",\r\n          \"discountPercent\": 10,\r\n          \"description\": \"10% Gold member discount\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "Supplied fields are not valid."
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict, ambiguous matches."
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/membershiptier": {
            "post": {
                "summary": "UpdateMembershipTier",
                "description": "Update the membership tier for the specified policyholder.",
                "operationId": "updatemembershiptier",
                "requestBody": {
                    "description": "The membership tier.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMembershipTierRequest"
                            },
                            "example": {
                                "policyholderType": "Main",
                                "tier": "Gold"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The premium details of the updated quote.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMembershipTierResponse"
                                },
                                "example": "{\r\n  \"annual\": {\r\n    \"total\": 1012.12,\r\n    \"gst\": 101,\r\n    \"basic\": 1000,\r\n    \"governmentCharges\": 11.12\r\n  },\r\n  \"monthly\": {\r\n    \"total\": 1112.12,\r\n    \"instalment\": 84.35,\r\n    \"gst\": 8.44,\r\n    \"basic\": 70,\r\n    \"governmentCharges\": 4.55\r\n  },\r\n      \"discounts\": [\r\n        {\r\n          \"discountType\": \"OnlineDiscount\",\r\n          \"discountValue\": 50,\r\n          \"description\": \"$50 First year online discount*\"\r\n        },\r\n        {\r\n          \"discountType\": \"MemberDiscount\",\r\n          \"discountPercent\": 10,\r\n          \"description\": \"10% Gold member discount\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "Supplied fields are not valid."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retrievequote": {
            "get": {
                "summary": "RetrieveQuote",
                "description": "Get an existing caravan quote",
                "operationId": "retrievequote",
                "parameters": [
                    {
                        "name": "quoteNumber",
                        "in": "query",
                        "description": "The unique number for the quote",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "suburbName",
                        "in": "query",
                        "description": "The suburb name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "postcode",
                        "in": "query",
                        "description": "The postal code for the suburb of the associate quote",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Caravan quote was found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrieveQuoteResponse"
                                },
                                "example": ""
                            }
                        }
                    },
                    "404": {
                        "description": "Caravan quote was not found."
                    },
                    "429": {
                        "description": "Too many requests for the caravan quote have been made."
                    }
                }
            }
        },
        "/payment": {
            "post": {
                "summary": "Payment",
                "description": "Issue policy for payment.",
                "operationId": "payment",
                "requestBody": {
                    "description": "Issue the policy in Shield for payment",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentRequest"
                            },
                            "example": {
                                "frequency": "Annual",
                                "method": "DirectDebit",
                                "bsb": "123123",
                                "accountNumber": "12341234",
                                "accountName": "Test Bank Account"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Issue policy using payment method was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentResponse"
                                },
                                "example": {
                                    "policyNumber": "QTE123451234"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Issue policy using credit card was accepted, however may require manual intervention by backend support staff.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentResponse"
                                },
                                "example": {
                                    "policyNumber": "QTE123451234"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "{\r\n  \"message\": \"Supplied values are not valid.r\n}"
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service is/was unavailable during payment. Requests may be retried again (with presence of Retry-After header).",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait before making a follow-up request. The absence of this header indicates it cannot be retried and should be treated the same as a 500 (Internal Server Error).",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentResponse"
                                },
                                "example": {
                                    "policyNumber": "QTE123451234"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/referencedata/payment": {
            "get": {
                "summary": "GetPaymentReferenceData",
                "description": "Get payment reference data.",
                "operationId": "getpaymentreferencedata",
                "responses": {
                    "200": {
                        "description": "The related reference data required for payments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentReferenceData"
                                },
                                "example": {
                                    "westpacPublishableApiKey": "xxxxx-xxxxx-xxxxx"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/formotiv/model": {
            "post": {
                "summary": "FormotivModel",
                "description": "Runs the Formotiv Model analysis.",
                "operationId": "formotivmodel",
                "requestBody": {
                    "description": "The details of the model to be run.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormotivModelRequest"
                            },
                            "example": {
                                "modelId": "545k9834-adf1-438f-b438-90c8273kdsb1",
                                "multiPageToken": "d25f0fb7-8eb6-04dc-9486-5a408294f43c-2909872780"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Run model ran successfully and returned model data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormotivModel"
                                },
                                "example": {
                                    "responseMessage": "OK",
                                    "modelData": [],
                                    "errorResponse": "false"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Run model failed and returned no response model data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormotivModel"
                                },
                                "example": {
                                    "responseMessage": "Unauthorized.",
                                    "modelData": [],
                                    "errorResponse": "true"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected technical exception has occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "message": "An unexpected technical exception has occurred."
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "String": {
                "title": "String",
                "type": "string",
                "description": "String"
            },
            "Error": {
                "title": "Error",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string",
                        "description": "The error message."
                    }
                },
                "description": "Contains the details regarding the error."
            },
            "ReferenceData": {
                "title": "ReferenceData",
                "required": [
                    "code",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "title": "Code",
                        "type": "string",
                        "description": "The unique code corresponding to the reference data."
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "description": "The name or description corresponding to the reference data."
                    }
                },
                "description": "Contains the details regarding the reference data."
            },
            "Manufacturer": {
                "title": "Manufacturer",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReferenceData"
                    }
                ],
                "properties": {
                    "isPopular": {
                        "title": "IsPopular",
                        "type": "boolean",
                        "description": "A flag indicating whether the manufacturer is popular / common."
                    }
                },
                "description": "Contains the details regarding the manufacturer."
            },
            "Model": {
                "title": "Model",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReferenceData"
                    }
                ],
                "description": "Contains the details regarding the model."
            },
            "Caravan": {
                "title": "Caravan",
                "required": [
                    "id",
                    "manufacturerCode",
                    "manufacturer",
                    "modelCode",
                    "model",
                    "year",
                    "description",
                    "marketValue"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "description": "The identifier corresponding to the caravan."
                    },
                    "manufacturerCode": {
                        "title": "ManufacturerCode",
                        "type": "string",
                        "description": "The manufacturer (code) of the caravan."
                    },
                    "manufacturer": {
                        "title": "Manufacturer",
                        "type": "string",
                        "description": "The manufacturer (name) of the caravan."
                    },
                    "modelCode": {
                        "title": "ModelCode",
                        "type": "string",
                        "description": "The model (code) of the caravan."
                    },
                    "model": {
                        "title": "Model",
                        "type": "string",
                        "description": "The model (name) of the caravan."
                    },
                    "year": {
                        "title": "Year",
                        "type": "integer",
                        "description": "The model year of the caravan."
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "description": "The full (name) description corresponding to the caravan."
                    },
                    "marketValue": {
                        "title": "MarketValue",
                        "type": "number",
                        "description": "The market value corresponding to the caravan."
                    }
                },
                "description": "Contains the details regarding the caravan."
            },
            "GetManufacturersResponse": {
                "title": "GetManufacturersResponse",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Manufacturer"
                },
                "description": "The list of manufacturers."
            },
            "GetManufacturerYearsResponse": {
                "title": "GetManufacturerYearsResponse",
                "type": "array",
                "items": {
                    "title": "Year",
                    "type": "integer",
                    "description": "The valid list of years for the specified manufacturer."
                },
                "description": "The list of available model years for the specified manufacturer."
            },
            "GetModelsResponse": {
                "title": "GetModelsResponse",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Model"
                },
                "description": "The list of available models for the specified manufacturer and year."
            },
            "GetCaravansResponse": {
                "title": "GetCaravansResponse",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Caravan"
                },
                "description": "The list of available caravans for the specified manufacturer, year and model."
            },
            "Suburb": {
                "title": "Suburb",
                "required": [
                    "cityName",
                    "name",
                    "postcode"
                ],
                "type": "object",
                "properties": {
                    "cityName": {
                        "title": "CityName",
                        "type": "string",
                        "description": "The display name (Name - Postcode)."
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "description": "The suburb name."
                    },
                    "postcode": {
                        "title": "Postcode",
                        "type": "string",
                        "description": "The suburb postcode"
                    }
                },
                "description": "A suburb in WA with postcode from Shield."
            },
            "Suburbs": {
                "title": "Suburbs",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Suburb"
                },
                "description": "The list of Suburbs."
            },
            "ReferenceDataOption": {
                "title": "ReferenceDataOption",
                "required": [
                    "description",
                    "externalCode"
                ],
                "type": "object",
                "properties": {
                    "externalCode": {
                        "title": "ExternalCode",
                        "type": "string",
                        "description": "Reference data option external code."
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "description": "Reference data option description."
                    }
                },
                "description": "The generic reference data structure."
            },
            "OvernightParkingOptions": {
                "title": "OvernightParkingOptions",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ReferenceDataOption"
                },
                "description": "The list of overnight parking options."
            },
            "MatchContact": {
                "title": "MatchContact",
                "required": [
                    "firstName",
                    "dateOfBirth",
                    "mobileNumber",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "title": "FirstName",
                        "maxLength": 50,
                        "type": "string",
                        "description": "The first name of the contact."
                    },
                    "dateOfBirth": {
                        "title": "DateOfBirth",
                        "type": "string",
                        "description": "The date of birth of the contact.",
                        "format": "date"
                    },
                    "mobileNumber": {
                        "title": "MobileNumber",
                        "maxLength": 10,
                        "minLength": 10,
                        "pattern": "04\\d{8}",
                        "type": "string",
                        "description": "The mobile number of the contact."
                    },
                    "email": {
                        "title": "Email",
                        "maxLength": 50,
                        "type": "string",
                        "description": "The email address of the contact.",
                        "format": "email"
                    }
                },
                "description": "The query parameters for matching a contact."
            },
            "MatchedContactDetails": {
                "title": "MatchedContactDetails",
                "required": [
                    "membershipTier",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "membershipTier": {
                        "title": "MembershipTier",
                        "type": "string",
                        "description": "The matched contacts membership tier."
                    },
                    "status": {
                        "title": "Status",
                        "type": "number",
                        "description": "The matched contact response status."
                    }
                },
                "description": "The details of the matched contact."
            },
            "MembershipLevels": {
                "title": "MembershipLevels",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ReferenceDataOption"
                },
                "description": "The list of membership levels."
            },
            "Asset": {
                "title": "Asset",
                "required": [
                    "vehicleId",
                    "keptLocation",
                    "suburb",
                    "postcode"
                ],
                "type": "object",
                "properties": {
                    "registrationNumber": {
                        "title": "RegistrationNumber",
                        "type": "string",
                        "description": "The registration number of the caravan."
                    },
                    "vehicleId": {
                        "title": "VehicleId",
                        "type": "integer",
                        "description": "The vehicle id."
                    },
                    "keptLocation": {
                        "$ref": "#/components/schemas/KeptLocation"
                    },
                    "suburb": {
                        "title": "Suburb",
                        "type": "string",
                        "description": "The suburb where the caravan or trailer is kept."
                    },
                    "postcode": {
                        "title": "Postcode",
                        "type": "number",
                        "description": "The postcode of the suburb where the caravan or trailer is kept."
                    },
                    "marketValue": {
                        "title": "MarketValue",
                        "type": "number",
                        "description": "The market value of the caravan or trailer."
                    }
                },
                "description": "The caravan or trailer details."
            },
            "RetrieveAsset": {
                "title": "Asset",
                "required": [
                    "vehicleId",
                    "keptLocation",
                    "suburb",
                    "postcode",
                    "manufacturerId",
                    "modelId",
                    "year"
                ],
                "type": "object",
                "properties": {
                    "registrationNumber": {
                        "title": "RegistrationNumber",
                        "type": "string",
                        "description": "The registration number of the caravan."
                    },
                    "vehicleId": {
                        "title": "VehicleId",
                        "type": "integer",
                        "description": "The vehicle id."
                    },
                    "keptLocation": {
                        "$ref": "#/components/schemas/KeptLocation"
                    },
                    "suburb": {
                        "title": "Suburb",
                        "type": "string",
                        "description": "The suburb where the caravan or trailer is kept."
                    },
                    "postcode": {
                        "title": "Postcode",
                        "type": "number",
                        "description": "The postcode of the suburb where the caravan or trailer is kept."
                    },
                    "marketValue": {
                        "title": "MarketValue",
                        "type": "number",
                        "description": "The market value of the caravan or trailer."
                    },
                    "manufacturerId": {
                        "title": "ManufacturerId",
                        "type": "string",
                        "description": "The manufacturer Id of the caravan."
                    },
                    "modelId": {
                        "title": "ModelId",
                        "type": "string",
                        "description": "The model Id of the caravan."
                    },
                    "year": {
                        "title": "Year",
                        "type": "integer",
                        "description": "The model year of the caravan."
                    }
                },
                "description": "The caravan or trailer details."
            },
            "Policyholder": {
                "title": "Policyholder",
                "required": [
                    "dateOfBirth"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "title": "FirstName",
                        "type": "string",
                        "description": "The first name of the policyholder."
                    },
                    "surname": {
                        "title": "Surname",
                        "type": "string",
                        "description": "The surname of the policyholder."
                    },
                    "dateOfBirth": {
                        "title": "DateOfBirth",
                        "type": "string",
                        "description": "The date of birth of the policyholder.",
                        "format": "date"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/Gender"
                    },
                    "email": {
                        "title": "Email",
                        "maxLength": 50,
                        "type": "string",
                        "description": "The email of the policyholder.",
                        "format": "email"
                    },
                    "title": {
                        "$ref": "#/components/schemas/Title"
                    },
                    "contactNumber": {
                        "title": "ContactNumber",
                        "maxLength": 10,
                        "minLength": 10,
                        "pattern": "^\\s*0\\s*[23478](\\s*\\d\\s*){8}$",
                        "type": "string",
                        "description": "The contacts phone number (could be landline or mobile)."
                    },
                    "membershipTier": {
                        "$ref": "#/components/schemas/MembershipTier"
                    }
                },
                "description": "The policyholder's details."
            },
            "RetrievePolicyholder": {
                "title": "Policyholder",
                "required": [
                    "dateOfBirth"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "title": "FirstName",
                        "type": "string",
                        "description": "The first name of the policyholder."
                    },
                    "surname": {
                        "title": "Surname",
                        "type": "string",
                        "description": "The surname of the policyholder."
                    },
                    "dateOfBirth": {
                        "title": "DateOfBirth",
                        "type": "string",
                        "description": "The date of birth of the policyholder.",
                        "format": "date"
                    },
                    "email": {
                        "title": "Email",
                        "maxLength": 50,
                        "type": "string",
                        "description": "The email of the policyholder.",
                        "format": "email"
                    },
                    "title": {
                        "$ref": "#/components/schemas/Title"
                    },
                    "contactNumber": {
                        "title": "ContactNumber",
                        "maxLength": 10,
                        "minLength": 10,
                        "pattern": "^\\s*0\\s*[23478](\\s*\\d\\s*){8}$",
                        "type": "string",
                        "description": "The contacts phone number (could be landline or mobile)."
                    }
                },
                "description": "The policyholder's details."
            },
            "DateRange": {
                "title": "DateRange",
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "title": "Value",
                        "type": "string",
                        "description": "The current value.",
                        "format": "date"
                    },
                    "min": {
                        "title": "Min",
                        "type": "string",
                        "description": "The minimum allowed value.",
                        "format": "date"
                    },
                    "max": {
                        "title": "Max",
                        "type": "string",
                        "description": "The maximum allowed value.",
                        "format": "date"
                    }
                }
            },
            "NumberRange": {
                "title": "NumberRange",
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "title": "Value",
                        "type": "number",
                        "description": "The current value."
                    },
                    "min": {
                        "title": "Min",
                        "type": "number",
                        "description": "The minimum allowed value."
                    },
                    "max": {
                        "title": "Max",
                        "type": "number",
                        "description": "The maximum allowed value."
                    }
                }
            },
            "NumberOptions": {
                "title": "NumberOptions",
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "title": "Value",
                        "type": "number",
                        "description": "The selected value or option."
                    },
                    "options": {
                        "title": "Options",
                        "type": "array",
                        "items": {
                            "title": "Option",
                            "type": "number",
                            "description": "The available option to select."
                        },
                        "description": "The available set of options to select a value from."
                    }
                }
            },
            "PolicyholderType": {
                "title": "PolicyholderType",
                "enum": [
                    "Main",
                    "Additional1"
                ],
                "type": "string"
            },
            "MembershipTier": {
                "title": "MembershipTier",
                "enum": [
                    "Gold",
                    "Silver",
                    "Bronze",
                    "Blue",
                    "Red",
                    "Free2Go",
                    "NotSure",
                    "NotAMember"
                ],
                "type": "string"
            },
            "KeptLocation": {
                "title": "KeptLocation",
                "enum": [
                    "Garage",
                    "Carport",
                    "Driveway",
                    "Street or Verge",
                    "Communal Carpark",
                    "On-Site"
                ],
                "type": "string"
            },
            "PremiumDetails": {
                "title": "PremiumDetails",
                "required": [
                    "annual",
                    "monthly"
                ],
                "type": "object",
                "properties": {
                    "annual": {
                        "$ref": "#/components/schemas/AnnualPremium"
                    },
                    "monthly": {
                        "$ref": "#/components/schemas/MonthlyPremium"
                    }
                },
                "description": "The premium details."
            },
            "Premium": {
                "title": "Premium",
                "required": [
                    "total",
                    "gst",
                    "basic",
                    "governmentCharges"
                ],
                "type": "object",
                "properties": {
                    "total": {
                        "title": "Total",
                        "type": "number",
                        "description": "The total amount including GST component."
                    },
                    "gst": {
                        "title": "Gst",
                        "type": "number",
                        "description": "The GST component."
                    },
                    "basic": {
                        "title": "Basic",
                        "type": "number",
                        "description": "The basic component (Basic = Total - Gst - GovernmentCharges)."
                    },
                    "governmentCharges": {
                        "title": "GovernmentCharges",
                        "type": "number",
                        "description": "The government charges (stamp duty) component."
                    }
                },
                "description": "The cost of premium for the selected risk/policy details."
            },
            "AnnualPremium": {
                "title": "AnnualPremium",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Premium"
                    }
                ],
                "description": "The cost of annual premium for the selected risk/policy details."
            },
            "MonthlyPremium": {
                "title": "Premium",
                "required": [
                    "instalment"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Premium"
                    }
                ],
                "properties": {
                    "instalment": {
                        "title": "Instalment",
                        "type": "number",
                        "description": "The monthly instalment amount."
                    }
                },
                "description": "The cost of premium for the selected risk/policy details."
            },
            "CoverType": {
                "title": "CoverType",
                "enum": [
                    "Caravan",
                    "Trailer"
                ],
                "type": "string"
            },
            "PaymentFrequency": {
                "title": "PaymentFrequency",
                "enum": [
                    "Annual",
                    "Monthly"
                ],
                "type": "string"
            },
            "PaymentMethod": {
                "title": "PaymentMethod",
                "enum": [
                    "Card",
                    "Bank account"
                ],
                "type": "string"
            },
            "Cover": {
                "title": "Cover",
                "required": [
                    "type",
                    "sumInsured",
                    "excess",
                    "premiumDetails"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/CoverType"
                    },
                    "sumInsured": {
                        "$ref": "#/components/schemas/NumberRange"
                    },
                    "excess": {
                        "$ref": "#/components/schemas/NumberOptions"
                    },
                    "premiumDetails": {
                        "$ref": "#/components/schemas/PremiumDetails"
                    },
                    "discounts": {
                        "title": "Discounts",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Discount"
                        },
                        "description": "The list of discounts for the quote."
                    }
                },
                "description": "The cover details."
            },
            "Discount": {
                "title": "Discount",
                "required": [
                    "discountType",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "discountType": {
                        "title": "DiscountType",
                        "type": "string",
                        "description": "Discount Type."
                    },
                    "discountValue": {
                        "title": "DiscountValue",
                        "type": "number",
                        "description": "Discount Value."
                    },
                    "discountPercent": {
                        "title": "DiscountPercent",
                        "type": "number",
                        "description": "Discount Percentage."
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "description": "Discount Description."
                    }
                },
                "description": "The discount details."
            },
            "CaravanCover": {
                "title": "CaravanCover",
                "required": [
                    "contents"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Cover"
                    }
                ],
                "properties": {
                    "contents": {
                        "$ref": "#/components/schemas/NumberRange"
                    }
                },
                "description": "The caravan cover details."
            },
            "TrailerCover": {
                "title": "CaravanCover",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Cover"
                    }
                ],
                "description": "The caravan cover details."
            },
            "QuoteRequest": {
                "title": "QuoteRequest",
                "required": [
                    "asset",
                    "policyholders"
                ],
                "type": "object",
                "properties": {
                    "promotion": {
                        "title": "Promotion",
                        "type": "string",
                        "description": "The promotion code to apply."
                    },
                    "asset": {
                        "$ref": "#/components/schemas/Asset"
                    },
                    "policyholders": {
                        "title": "Policyholders",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Policyholder"
                        },
                        "description": "The details of the policyholder(s)."
                    }
                },
                "description": "Object to save a quote."
            },
            "QuoteResponse": {
                "title": "QuoteResponse",
                "required": [
                    "quoteNumber",
                    "startDate",
                    "covers"
                ],
                "type": "object",
                "properties": {
                    "quoteNumber": {
                        "title": "QuoteNumber",
                        "type": "string",
                        "description": "The quote number."
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateRange"
                    },
                    "covers": {
                        "title": "Covers",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Cover"
                        },
                        "description": "The list of covers available for the quote."
                    }
                },
                "description": "Object the details of the quote created or updated."
            },
            "RetrieveQuoteResponse": {
                "title": "RetrieveQuoteResponse",
                "required": [
                    "paymentFrequency",
                    "mainPolicyholder",
                    "caravan",
                    "asset",
                    "hasAdditionalPolicyholder",
                    "quoteNumber",
                    "startDate",
                    "covers"
                ],
                "properties": {
                    "paymentFrequency": {
                        "$ref": "#/components/schemas/PaymentFrequency"
                    },
                    "mainPolicyholder": {
                        "$ref": "#/components/schemas/RetrievePolicyholder"
                    },
                    "additionalPolicyholder": {
                        "$ref": "#/components/schemas/RetrievePolicyholder"
                    },
                    "asset": {
                        "$ref": "#/components/schemas/RetrieveAsset"
                    },
                    "hasAdditionalPolicyholder": {
                        "title": "HasAdditionalPolicyholder",
                        "type": "boolean",
                        "description": "Denotes if there is more than 1 policyholder for the quote."
                    },
                    "quoteNumber": {
                        "title": "QuoteNumber",
                        "type": "string",
                        "description": "The quote number."
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateRange"
                    },
                    "covers": {
                        "title": "Covers",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Cover"
                        },
                        "description": "The list of covers available for the quote."
                    }
                },
                "description": "Object details of an existing quote."
            },
            "FurtherDetailsRequest": {
                "title": "FurtherDetailsRequest",
                "required": [
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "startDate": {
                        "title": "startDate",
                        "type": "string",
                        "description": "The start date of the policy.",
                        "format": "date"
                    }
                },
                "description": "Object to update the policy details of a quote."
            },
            "CoverSummary": {
                "title": "CoverSummary",
                "required": [
                    "type",
                    "excess",
                    "premiumDetails"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/CoverType"
                    },
                    "excess": {
                        "$ref": "#/components/schemas/NumberOptions"
                    },
                    "premiumDetails": {
                        "$ref": "#/components/schemas/PremiumDetails"
                    }
                },
                "description": "The cover details."
            },
            "CoverRequest": {
                "title": "CoverRequest",
                "required": [
                    "type",
                    "frequency",
                    "excess",
                    "sumInsured"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/CoverType"
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/PaymentFrequency"
                    },
                    "excess": {
                        "title": "Excess",
                        "type": "number",
                        "description": "The excess amount for the cover."
                    },
                    "sumInsured": {
                        "title": "SumInsured",
                        "type": "number",
                        "description": "The sum insured details."
                    },
                    "contents": {
                        "title": "Contents",
                        "type": "number",
                        "description": "The sum insured details for contents cover."
                    }
                },
                "description": "Object to create and update a cover."
            },
            "EmailQuoteRequest": {
                "title": "EmailQuoteRequest",
                "required": [
                    "email"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CoverRequest"
                    }
                ],
                "properties": {
                    "email": {
                        "title": "Email",
                        "maxLength": 50,
                        "type": "string",
                        "description": "The email address to email the quote to.",
                        "format": "email"
                    }
                }
            },
            "PersonalInformationReferenceData": {
                "title": "PersonalInformationReferenceData",
                "required": [
                    "isTitleAndGenderRequired"
                ],
                "type": "object",
                "properties": {
                    "isTitleAndGenderRequired": {
                        "title": "IsTitleAndGenderRequired",
                        "type": "boolean",
                        "description": "Whether Title and Gender is required for the matched contact."
                    },
                    "postalAddress": {
                        "$ref": "#/components/schemas/AddressSummary"
                    },
                    "surname": {
                        "title": "Surname",
                        "type": "string",
                        "description": "The surname of the policyholder."
                    },
                    "title": {
                        "$ref": "#/components/schemas/Title"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/Gender"
                    }
                },
                "description": "Contains the reference data that is required to populate the Personal Information form."
            },
            "AddressSummary": {
                "title": "AddressSummary",
                "required": [
                    "moniker",
                    "displayAddress"
                ],
                "type": "object",
                "properties": {
                    "moniker": {
                        "title": "Moniker",
                        "type": "string",
                        "description": "The moniker representing the address."
                    },
                    "displayAddress": {
                        "title": "DisplayAddress",
                        "type": "string",
                        "description": "The display text of the address."
                    }
                },
                "description": "Contains the address summary."
            },
            "AddressSummaryList": {
                "title": "AddressSummaryList",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AddressSummary"
                },
                "description": "The list of address summary."
            },
            "UpdateContactDetailsRequest": {
                "title": "UpdateContactDetailsRequest",
                "required": [
                    "mailingAddress"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "$ref": "#/components/schemas/Title"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/Gender"
                    },
                    "firstName": {
                        "title": "FirstName",
                        "maxLength": 50,
                        "type": "string",
                        "description": "The first name of the contact."
                    },
                    "surname": {
                        "title": "Surname",
                        "maxLength": 55,
                        "type": "string",
                        "description": "The contacts surname."
                    },
                    "contactNumber": {
                        "title": "ContactNumber",
                        "maxLength": 10,
                        "minLength": 10,
                        "pattern": "^\\s*0\\s*[23478](\\s*\\d\\s*){8}$",
                        "type": "string",
                        "description": "The contacts phone number (could be landline or mobile)."
                    },
                    "email": {
                        "title": "Email",
                        "maxLength": 50,
                        "type": "string",
                        "description": "The email address to email the quote to.",
                        "format": "email"
                    },
                    "mailingAddress": {
                        "title": "MailingAddress",
                        "type": "string",
                        "description": "The moniker representing the address."
                    },
                    "policyholderType": {
                        "$ref": "#/components/schemas/PolicyholderType"
                    }
                },
                "description": "Request object to update a contact details."
            },
            "UpdateContactDetailsResponse": {
                "title": "UpdateContactDetailsResponse",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PremiumDetails"
                    }
                ],
                "properties": {
                    "askMembershipTier": {
                        "title": "AskMembershipTier",
                        "type": "boolean",
                        "description": "A flag indicating whether to ask for membership tier or not."
                    },
                    "discounts": {
                        "title": "Discounts",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Discount"
                        },
                        "description": "The list of discounts for the quote."
                    }
                },
                "description": "Contains the response details regarding the updated quote details."
            },
            "Gender": {
                "title": "Gender",
                "enum": [
                    "Male",
                    "Female"
                ],
                "type": "string",
                "description": "The contacts gender."
            },
            "Title": {
                "title": "Title",
                "enum": [
                    "Mr",
                    "Mrs",
                    "Miss",
                    "Ms",
                    "Mx",
                    "Dr"
                ],
                "type": "string",
                "description": "The contacts title."
            },
            "PaymentResponse": {
                "title": "PaymentResponse",
                "required": [
                    "policyNumber"
                ],
                "type": "object",
                "properties": {
                    "policyNumber": {
                        "title": "PolicyNumber",
                        "pattern": "^MGV\\d+$",
                        "type": "string",
                        "description": "The policy number."
                    },
                    "receiptNumber": {
                        "title": "ReceiptNumber",
                        "type": "string",
                        "description": "The receipt number."
                    },
                    "total": {
                        "title": "Total",
                        "type": "number",
                        "description": "The total paid."
                    }
                },
                "description": "Contains the payment response details with policy issued."
            },
            "UpdateMembershipTierRequest": {
                "title": "UpdateMembershipTierRequest",
                "type": "object",
                "properties": {
                    "policyholderType": {
                        "$ref": "#/components/schemas/PolicyholderType"
                    },
                    "tier": {
                        "$ref": "#/components/schemas/MembershipTier"
                    }
                },
                "description": "Contains membership details regarding the policyholder's."
            },
            "UpdateMembershipTierResponse": {
                "title": "UpdateMembershipTierResponse",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PremiumDetails"
                    }
                ],
                "properties": {
                    "discounts": {
                        "title": "Discounts",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Discount"
                        },
                        "description": "The list of discounts for the quote."
                    }
                },
                "description": "Contains the premium details regarding the quote."
            },
            "PaymentReferenceData": {
                "title": "PaymentReferenceData",
                "required": [
                    "westpacPublishableApiKey"
                ],
                "type": "object",
                "properties": {
                    "westpacPublishableApiKey": {
                        "title": "WestpacPublishableApiKey",
                        "type": "string",
                        "description": "Publishable Westpac API Key."
                    }
                },
                "description": "Contains the reference data that is required in the payment page."
            },
            "PaymentRequest": {
                "title": "PaymentRequestBase",
                "required": [
                    "frequency",
                    "method"
                ],
                "type": "object",
                "properties": {
                    "frequency": {
                        "$ref": "#/components/schemas/PaymentFrequency"
                    },
                    "method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    },
                    "bsb": {
                        "title": "Bsb",
                        "maxLength": 6,
                        "minLength": 6,
                        "pattern": "^[0-9]{6}",
                        "type": "string",
                        "description": "The accounts BSB number."
                    },
                    "accountNumber": {
                        "title": "AccountNumber",
                        "maxLength": 9,
                        "minLength": 3,
                        "pattern": "^[0-9]{3,9}$",
                        "type": "string",
                        "description": "The account number."
                    },
                    "accountName": {
                        "title": "AccountName",
                        "maxLength": 40,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z\\s&`'-]{1,40}$",
                        "type": "string",
                        "description": "The account name."
                    },
                    "token": {
                        "title": "Token",
                        "type": "string",
                        "description": "The Westpac single use token."
                    }
                },
                "description": "Contains the payment details to issue a policy."
            },
            "FormotivModelRequest": {
                "title": "FormotivRunModelRequest",
                "required": [
                    "ModelId",
                    "MultiPageToken"
                ],
                "type": "object",
                "properties": {
                    "ModelId": {
                        "title": "ModelId",
                        "maxLength": 100,
                        "type": "string",
                        "description": "The ModelId to run the analysis for."
                    },
                    "MultiPageToken": {
                        "title": "MultiPageToken",
                        "maxLength": 100,
                        "type": "string",
                        "description": "The MultiPageToken to run the analysis for."
                    }
                },
                "description": "Object the details of the Model to be run."
            },
            "FormotivModel": {
                "title": "FormotivRunModelResponse",
                "required": [
                    "responseMessage",
                    "modelData",
                    "errorResponse"
                ],
                "type": "object",
                "properties": {
                    "responseMessage": {
                        "title": "ResponseMessage",
                        "type": "string",
                        "description": "The response message."
                    },
                    "modelData": {
                        "$ref": "#/components/schemas/FormotivModelData"
                    },
                    "isError": {
                        "title": "IsError",
                        "type": "boolean",
                        "description": "Indicator of Run Model error response."
                    }
                },
                "description": "Object the details of the run model response."
            },
            "FormotivModelData": {
                "title": "Cover",
                "required": [
                    "score",
                    "language",
                    "type",
                    "calculationTime",
                    "prediction"
                ],
                "type": "object",
                "properties": {
                    "score": {
                        "title": "Score",
                        "type": "number",
                        "description": "The probability for prediction of class 1 (positive outcome).",
                        "format": "double"
                    },
                    "processor": {
                        "title": "Processor",
                        "type": "string",
                        "description": "The real-time data cleaning rules to prepare the data."
                    },
                    "modelId": {
                        "title": "ModelId",
                        "type": "string",
                        "description": "Unique identifier for the deployed real-time model."
                    },
                    "language": {
                        "title": "Language",
                        "type": "string",
                        "description": "The development language used to create the model."
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "description": "The type of model: Classifier or Regression."
                    },
                    "calculationTime": {
                        "title": "CalculationTime",
                        "type": "number",
                        "description": "The amount of time (seconds) to run the prediction.",
                        "format": "double"
                    },
                    "modelName": {
                        "title": "ModelName",
                        "type": "string",
                        "description": "Friendly name of the deployed real-time model."
                    },
                    "prediction": {
                        "title": "Prediction",
                        "type": "integer",
                        "description": "The predicted outcome class. 0 or 1 (negative or positive class)."
                    }
                },
                "description": "The cover details."
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {},
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}