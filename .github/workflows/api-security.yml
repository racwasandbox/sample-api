name: "API Security"

# follow standard Code Scanning triggers
on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  workflow_dispatch:
#   schedule:
#     - cron: '19 9 * * 6'

env:
  PLATFORM_URL: https://platform.42crunch.com
  TARGET_URL: "https://apim-api-security.azure-api.net/func-api-security"

jobs:
  run_42c_audit:
    permissions:
      contents: read # for actions/checkout to fetch code
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: 42crunch-static-api-testing
        uses: 42Crunch/api-security-audit-action@v3
        with:
          api-token: ${{ secrets.CRUNCH42_API_TOKEN }}
          platform-url: ${{ env.PLATFORM_URL}}
          default-collection-name: API-Security-POC
          # Upload results to Github code scanning
          upload-to-code-scanning: false
          log-level: info
          json-report: audit-action-report-${{ github.run_id }}
          sarif-report: 42Crunch_AuditReport_${{ github.run_id }}.SARIF

      - name: save-audit-report
        if: always()        
        uses: actions/upload-artifact@v3
        with:
          name: auditaction-report-${{ github.run_id }}
          path: audit-action-report-${{ github.run_id }}.json
          if-no-files-found: error

  run_42c_scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: 42crunch-static-api-testing
        uses: 42Crunch/api-security-scan-action-freemium@v1
        with:
          upload-to-code-scanning: false
          api-definition: openapi.yml
          api-credential: ${{ secrets.APIM_SUBSCRIPTION_KEY }}
          target-url: ${{ env.TARGET_URL }}
          log-level: info
          sarif-report: 42Crunch_ScanReport_${{ github.run_id }}.SARIF
          scan-report: 42Crunch_RawReport_${{ github.run_id }}.json
          export-as-pdf: 42Crunch_ScanReport_${{ github.run_id }}.pdf
